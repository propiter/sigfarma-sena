@echo off
setlocal enabledelayedexpansion

REM SIGFARMA-SENA - Script de Instalaci√≥n Autom√°tica para Windows
REM Este script configura todo el sistema autom√°ticamente

echo.
echo üè• SIGFARMA-SENA - Sistema Integral de Gesti√≥n Farmac√©utica
echo üìã Iniciando configuraci√≥n autom√°tica...
echo.

REM Verificar si Docker est√° instalado
docker --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker no est√° instalado. Intentando instalar Docker Desktop autom√°ticamente...
    
    REM Descargar Docker Desktop
    powershell -Command "Invoke-WebRequest -Uri https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe -OutFile DockerInstaller.exe"

    REM Instalar silenciosamente
    echo üì¶ Ejecutando instalador...
    start /wait DockerInstaller.exe install --quiet

    REM Verificar nuevamente
    docker --version >nul 2>&1
    if errorlevel 1 (
        echo ‚ùå La instalaci√≥n autom√°tica fall√≥ o requiere reinicio.
        echo üîß Por favor instala Docker Desktop manualmente desde:
        echo    https://www.docker.com/products/docker-desktop
        pause
        exit /b 1
    ) else (
        echo ‚úÖ Docker instalado correctamente
    )
) else (
    echo ‚úÖ Docker ya est√° instalado
)

REM Verificar si Docker Compose est√° disponible (a trav√©s de docker compose v2)
docker compose version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker Compose no est√° disponible o no es compatible.

    echo üì¶ Verificando si Docker Compose cl√°sico est√° disponible...
    docker-compose --version >nul 2>&1
    if errorlevel 1 (
        echo ‚ùå Docker Compose cl√°sico tampoco est√° instalado.
        echo üîß Intenta actualizar Docker Desktop o instalar Docker Compose manualmente:
        echo    https://docs.docker.com/compose/install/
        pause
        exit /b 1
    ) else (
        echo ‚úÖ Docker Compose cl√°sico encontrado
    )
) else (
    echo ‚úÖ Docker Compose v2 disponible
)


echo ‚úÖ Docker y Docker Compose est√°n instalados

REM Verificar si ya existe una instalaci√≥n
if exist ".env" if exist "node_modules" (
    echo.
    echo ‚ö†Ô∏è  Instalaci√≥n existente detectada
    echo.
    echo ¬øQu√© deseas hacer?
    echo 1^) Iniciar servicios existentes ^(recomendado^)
    echo 2^) Reinstalar completamente ^(BORRAR√Å TODOS LOS DATOS^)
    echo 3^) Cancelar
    echo.
    set /p choice="Selecciona una opci√≥n (1-3): "
    
    if "!choice!"=="1" (
        echo üìã Iniciando servicios existentes...
        docker compose build
        docker compose up -d

        goto :db_setup
    ) else if "!choice!"=="2" (
        echo.
        echo ‚ö†Ô∏è  ADVERTENCIA: Esto borrar√° TODOS los datos existentes
        set /p confirm="¬øEst√°s seguro? Escribe 'BORRAR' para confirmar: "
        if "!confirm!"=="BORRAR" (
            echo üìã Eliminando instalaci√≥n anterior...
            docker compose down -v
            docker system prune -f
            rmdir /s /q node_modules 2>nul
            del .env 2>nul
        ) else (
            echo üìã Operaci√≥n cancelada
            pause
            exit /b 0
        )
    ) else if "!choice!"=="3" (
        echo üìã Operaci√≥n cancelada
        pause
        exit /b 0
    ) else (
        echo ‚ùå Opci√≥n inv√°lida
        pause
        exit /b 1
    )
)

REM Crear archivo .env si no existe
if not exist ".env" (
    echo üìã Creando archivo de configuraci√≥n...
    (
        echo # Base de datos
        echo DATABASE_URL="postgresql://postgres:postgres@localhost:5432/sigfarma_sena"
        echo.
        echo # JWT Configuration
        echo JWT_SECRET="sigfarma-sena-jwt-secret-key-change-in-production"
        echo JWT_EXPIRES_IN="7d"
        echo.
        echo # Server Configuration
        echo NODE_ENV="production"
        echo PORT=3000
        echo.
        echo # Client Configuration
        echo CLIENT_URL="http://localhost:3000"
    ) > .env
    echo ‚úÖ Archivo .env creado
)

REM Verificar si Node.js est√° instalado
node --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Node.js no est√° instalado. Por favor instala Node.js primero:
    echo    https://nodejs.org/
    pause
    exit /b 1
)

REM Instalar dependencias Node.js
if not exist "node_modules" (
    echo üìã Instalando dependencias...
    npm install
    if errorlevel 1 (
        echo ‚ùå Error instalando dependencias
        pause
        exit /b 1
    )
    echo ‚úÖ Dependencias instaladas
)

REM Iniciar servicios con Docker
echo üìã Iniciando servicios...
docker compose build
docker compose up -d


:db_setup
REM Esperar a que la base de datos est√© lista
echo üìã Esperando a que la base de datos est√© lista...
timeout /t 10 /nobreak >nul

REM Generar cliente Prisma
echo üìã Configurando base de datos...
call npx prisma generate

REM Verificar si la base de datos existe
echo üìã Verificando base de datos...
docker-compose exec -T database psql -U postgres -c "SELECT 1 FROM pg_database WHERE datname = 'sigfarma_sena'" | findstr /C:"1" >nul
if errorlevel 1 (
    echo üìã Creando base de datos...
    docker-compose exec -T database psql -U postgres -c "CREATE DATABASE sigfarma_sena"
)

REM Esperar a que la base de datos est√© completamente lista
echo üìã Esperando a que la base de datos est√© lista...
docker-compose exec -T database bash -c "until pg_isready -U postgres -d sigfarma_sena; do sleep 2; echo 'Esperando a que la base de datos est√© lista...'; done"

REM Verificar si existe alg√∫n usuario administrador
echo üìã Verificando si existe un usuario administrador...
docker-compose exec -T database psql -U postgres -d sigfarma_sena -c "SELECT 1 FROM usuarios WHERE rol = 'administrador' LIMIT 1;" | findstr /C:"1" >nul
if errorlevel 1 (
    echo üìã No existe usuario administrador, aplicando migraciones y seeders...

    docker-compose stop app >nul 2>&1

    REM Ejecutar migraciones dentro del contenedor de la aplicaci√≥n
    docker-compose run --rm app npx prisma migrate dev --name init --skip-seed

    REM Ejecutar seeders
    docker-compose run --rm app npm run db:seed

    echo ‚úÖ Migraciones y seeders aplicados
) else (
    echo ‚úÖ Ya existe un usuario administrador, omitiendo seeders
)


REM (Re)iniciar la aplicaci√≥n para asegurar que toma los cambios
echo üìã Reiniciando la aplicaci√≥n para aplicar cambios...
docker compose restart app adminer

REM Construcci√≥n local no necesaria, ya se construy√≥ en Docker
REM echo üìã Construyendo aplicaci√≥n...
REM npm run build
REM if errorlevel 1 (
REM     echo ‚ùå Error construyendo la aplicaci√≥n
REM     pause
REM     exit /b 1
REM )


:verify_services
REM Verificar que los servicios est√©n funcionando
echo üìã Verificando servicios...
timeout /t 5 /nobreak >nul

REM Iniciar navegador
echo üìã Abriendo aplicaci√≥n en navegador...
start "" http://localhost:3000

REM La app ya corre en Docker, no ejecutar localmente
REM npm start


echo.
echo üéâ ¬°INSTALACI√ìN COMPLETADA EXITOSAMENTE!
echo.
echo üì± ACCESOS AL SISTEMA:
echo ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
echo üåê Aplicaci√≥n Principal: http://localhost:3000
echo üóÑÔ∏è  Gestor de Base de Datos: http://localhost:8080
echo.
echo üë§ CREDENCIALES DE ACCESO:
echo ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
echo üîë Administrador:
echo    üìß Email: admin@farmacia.com
echo    üîí Contrase√±a: admin123
echo.
echo üîë Cajero:
echo    üìß Email: cajero@farmacia.com
echo    üîí Contrase√±a: cajero123
echo.
echo üîë Inventario:
echo    üìß Email: inventario@farmacia.com
echo    üîí Contrase√±a: inventario123
echo.
echo ‚ö†Ô∏è  IMPORTANTE: Cambia estas contrase√±as despu√©s del primer acceso
echo.
echo üõ†Ô∏è  COMANDOS √öTILES:
echo ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
echo üîÑ Reiniciar servicios: docker-compose restart
echo ‚èπÔ∏è  Detener servicios: docker-compose down
echo üìä Ver logs: docker-compose logs -f
echo.
echo üìö Para m√°s informaci√≥n, consulta el README.md
echo.
REM Crear acceso directo para abrir SIGFARMA al iniciar Windows
echo üìã Verificando si ya existe acceso directo de inicio autom√°tico...
REM Crear acceso directo en el escritorio y en inicio autom√°tico

set "shortcut_name=SIGFARMA-SENA"
set "shortcut_url=http://localhost:3000"

set "desktop_path=%USERPROFILE%\Desktop"
set "startup_path=%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup"

if not exist "%desktop_path%\%shortcut_name%.url" (
    echo [InternetShortcut] > "%desktop_path%\%shortcut_name%.url"
    echo URL=%shortcut_url% >> "%desktop_path%\%shortcut_name%.url"
    echo ‚úÖ Acceso directo creado en el escritorio
) else (
    echo ‚ÑπÔ∏è  Ya existe el acceso directo en el escritorio
)

if not exist "%startup_path%\%shortcut_name%.url" (
    echo [InternetShortcut] > "%startup_path%\%shortcut_name%.url"
    echo URL=%shortcut_url% >> "%startup_path%\%shortcut_name%.url"
    echo ‚úÖ Acceso directo creado en inicio autom√°tico
) else (
    echo ‚ÑπÔ∏è  Ya existe el acceso directo en inicio autom√°tico
)

pause